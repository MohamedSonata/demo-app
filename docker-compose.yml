# path: ./docker-compose.yml

version: '3'
services:
  demo-app:
    build: .
    image: sonata93/demo-app
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: demo-appDB
      DATABASE_PORT: 
      DATABASE_NAME: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgrespw
      JWT_SECRET: LPhVCz3mxn+u9eL/LB9foQ==
      ADMIN_JWT_SECRET: 98Iv0hHdX18myPoAql6ImA==
      APP_KEYS: 95X2sT81jo0p4wLONgtExQ==,FctoelVKaomUNxm8XwYxPw==
      NODE_ENV: production
    deploy:
      replicas: 3
      # placement:
      #   max_replicas_per_node: 1
      update_config:
        parallelism: 
        delay: 30s
      restart_policy:
        condition: on-failure
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1339:1339'

    depends_on:
      - demo-appDB
      
  demo-appDB:

    # platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: postgres
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - '5439:5432'


volumes:
  strapi-data:


